plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'org.flywaydb.flyway' version '5.2.4' apply false
}

apply plugin: 'groovy'
apply plugin: 'org.flywaydb.flyway'

def flywayDatabase = new Properties()

if (file("src/main/resources/database-flyway.properties").canRead()) {
	file("src/main/resources/database-flyway.properties").withReader { flywayDatabase.load(it) }
}
def databaseProperty = new Properties()
databaseProperty.put('dbUrl', getDatabaseUrl(flywayDatabase))
databaseProperty.put('dbUser', getDatabaseUser(flywayDatabase))
databaseProperty.put('dbPassword', getDatabasePassword(flywayDatabase))

println('database-property : ' + databaseProperty)

flyway {
	url = databaseProperty.get('dbUrl')
	user = databaseProperty.get('dbUser')
	password = databaseProperty.get('dbPassword')
}

def getDatabasePassword(Properties flywayDatabase) {
	if (project.hasProperty("dbPassword")) {
		project.property('dbPassword')
	} else {
		flywayDatabase.getOrDefault('dbPassword', '')
	}

}

def getDatabaseUser(Properties flywayDatabase) {
	if (project.hasProperty("dbUser")) {
		project.property('dbUser')
	} else {
		flywayDatabase.getOrDefault('dbUser', 'root')
	}
}

def getDatabaseUrl(Properties flywayDatabase) {
	if (project.hasProperty("dbUrl")) {
		project.property('dbUrl')
	} else {
		flywayDatabase.getOrDefault('dbUrl', 'jdbc:mysql://localhost:3306/blog?useUnicode=true&connectTimeout=3000&socketTimeout=60000&sendFractionalSeconds=false&serverTimezone=UTC')
	}
}

group = 'com.developers'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-logging'

	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.13'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	annotationProcessor "org.projectlombok:lombok:1.18.4"
	implementation 'org.projectlombok:lombok:1.18.4'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.4'
	testImplementation(
			'org.projectlombok:lombok:1.18.4',
			'junit:junit:4.12',
			'org.codehaus.groovy:groovy-all:2.5.6',
			'org.spockframework:spock-core:1.2-groovy-2.5',
			"org.spockframework:spock-spring:1.2-groovy-2.5"
	)
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	implementation("io.springfox:springfox-swagger2:2.9.2") {
		exclude module: 'swagger-annotations'
		exclude module: 'swagger-models'
	}
	implementation "io.swagger:swagger-annotations:1.5.21"
	implementation "io.swagger:swagger-models:1.5.21"
}

test {
	useJUnitPlatform()
}
